{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Store Manager",
    "description": "API para gerenciamento de produtos e vendas"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Products",
      "description": "Endpoints"
    },
    {
      "name": "Sales",
      "description": "Endpoints"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/products/search": {
      "get": {
        "tags": ["Products"],
        "description": "Endpoint para buscar produtos pelo nome.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Nome do Produto.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductsByQueryString"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "description": "Endpoint para obter um produto específico.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do produto."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductByID"
            }
          },
          "404": {
            "description": "NOT FOUND.",
            "examples": {
              "application/json": {
                "message": "Product not found"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "description": "Endpoint para atualizar um produto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do produto."
          },
          {
            "name": "Product",
            "in": "body",
            "description": "Informações do produto.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/resUpdateProducts"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "examples": {
              "application/json": {
                "message": "Product not found"
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "examples": {
              "application/json": {
                "message": "\"name\" is required"
              }
            }
          },
          "422": {
            "description": " UNPROCESSABLE ENTITY",
            "examples": {
              "application/json": {
                "message": "\"name\" length must be at least 5 characters long"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "description": "Endpoint para deletar um produto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do produto."
          }
        ],
        "responses": {
          "204": {
            "description": "NO CONTENT"
          },
          "404": {
            "description": "NOT FOUND",
            "examples": {
              "application/json": {
                "message": "Product not found"
              }
            }
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": ["Products"],
        "description": "Endpoint para obter todos os produtos.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllProducts"
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "description": "Endpoint para criação de um produto.",
        "parameters": [
          {
            "name": "Product",
            "in": "body",
            "description": "Informações do produto.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddProducts"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/resAddProducts"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "examples": {
              "application/json": {
                "message": "\"name\" is required"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY",
            "examples": {
              "application/json": {
                "message": "\"name\" length must be at least 5 characters long"
              }
            }
          }
        }
      }
    },
    "/sales/{id}": {
      "get": {
        "tags": ["Sales"],
        "description": "Endpoint para obter uma venda específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID da venda."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaleByID"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "examples": {
              "application/json": {
                "message": "Sale not found"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Sales"],
        "description": "Endpoint para atualizar uma venda.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID da venda."
          },
          {
            "name": "Sale",
            "in": "body",
            "description": "Informações da venda.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSale"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/resUpdateSale"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "examples": {
              "application/json": {
                "message": "Sale not found"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Sales"],
        "description": "Endpoint para deletar uma venda.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID da venda."
          }
        ],
        "responses": {
          "204": {
            "description": "NO CONTENT"
          },
          "404": {
            "description": "NOT FOUND",
            "examples": {
              "application/json": {
                "message": "Sale not found"
              }
            }
          }
        }
      }
    },
    "/sales/": {
      "get": {
        "tags": ["Sales"],
        "description": "Endpoint para obter todas as vendas.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Sales"
            }
          }
        }
      },
      "post": {
        "tags": ["Sales"],
        "description": "Endpoint para criação de uma venda.",
        "parameters": [
          {
            "name": "Sale",
            "in": "body",
            "description": "Informações da venda.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addSale"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/resAddSale"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "examples": {
              "application/json": {
                "message{1}": "\"productId\" is required",
                "message{2}": "\"quantity\" is required"
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "examples": {
              "application/json": {
                "message": "Product not found"
              }
            }
          },
          "422": {
            "description": " UNPROCESSABLE ENTITY",
            "examples": {
              "application/json": {
                "message": "\"quantity\" must be greater than or equal to 1"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllProducts": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Martelo de Thor"
          }
        }
      },
      "example": [
        {
          "id": 1,
          "name": "Martelo de Thor"
        },
        {
          "id": 2,
          "name": "Traje de encolhimento"
        }
      ]
    },
    "ProductsByQueryString": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Martelo de Thor"
          }
        }
      },
      "example": [
        {
          "id": 1,
          "name": "Martelo de Thor"
        }
      ]
    },
    "ProductByID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Martelo de Thor"
        }
      }
    },
    "UpdateProducts": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Luva de Pedreiro"
        }
      },
      "required": ["name"]
    },
    "resUpdateProducts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Luva de Pedreiro"
        }
      }
    },
    "AddProducts": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Luva de Pedreiro"
        }
      },
      "required": ["name"]
    },
    "resAddProducts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 3
        },
        "name": {
          "type": "string",
          "example": "Luva de Pedreiro"
        }
      }
    },
    "addSale": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "example": [
        {
          "productId": 1,
          "quantity": 10
        },
        {
          "productId": 2,
          "quantity": 50
        }
      ]
    },
    "resAddSale": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 3
        },
        "itemsSold": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "example": 2
              },
              "quantity": {
                "type": "integer",
                "example": 5
              }
            }
          }
        }
      }
    },
    "Sales": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "saleId": {
            "type": "integer",
            "example": 2
          },
          "productId": {
            "type": "integer",
            "example": 3
          },
          "quantity": {
            "type": "integer",
            "example": 15
          },
          "date": {
            "type": "string",
            "example": "2022-07-05T01:13:40.000Z"
          }
        }
      },
      "example": [
        {
          "saleId": 1,
          "date": "2021-09-09T04:54:29.000Z",
          "productId": 1,
          "quantity": 2
        },
        {
          "saleId": 2,
          "date": "2021-09-09T04:54:54.000Z",
          "productId": 2,
          "quantity": 2
        }
      ]
    },
    "SaleByID": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2022-07-05T01:13:40.000Z"
          },
          "productId": {
            "type": "integer",
            "example": 2
          },
          "quantity": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "example": [
        {
          "date": "2021-09-09T04:54:29.000Z",
          "productId": 1,
          "quantity": 2
        },
        {
          "date": "2021-09-09T04:54:54.000Z",
          "productId": 2,
          "quantity": 2
        }
      ]
    },
    "UpdateSale": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "example": 1
        },
        "quantity": {
          "type": "integer",
          "example": 10
        }
      },
      "required": ["productId", "quantity"]
    },
    "resUpdateSale": {
      "type": "object",
      "properties": {
        "saleId": {
          "type": "string",
          "example": "1"
        },
        "itemsUpdated": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "example": 2
              },
              "quantity": {
                "type": "integer",
                "example": 30
              }
            }
          }
        }
      }
    }
  }
}
